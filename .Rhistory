fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
cjv <- plot_mriqc_metric(T1, "cjv")
efc <- plot_mriqc_metric(T1, "efc")
grid_arrange_shared_legend(cnr, snr_total,snrd_total, fwhm_avg, cjv, efc)
T2 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T2w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16))
cnr <- plot_mriqc_metric(T2,"cnr")
snr_total <- plot_mriqc_metric(T2, "snr_total")
snrd_total <- plot_mriqc_metric(T2, "snrd_total")
fwhm_avg <- plot_mriqc_metric(T2, "fwhm_avg")
cjv <- plot_mriqc_metric(T2, "cjv")
efc <- plot_mriqc_metric(T2, "efc")
grid_arrange_shared_legend(cnr, snr_total,snrd_total, fwhm_avg, cjv, efc)
library(plyr)
library(tidyverse)
library(jsonlite)
library(lubridate)
library(gridExtra)
library(reshape2)
library(kableExtra)
#params_init=read.csv(file='/scratch/gherman/mriqc/bold_init.csv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"))
params=read.csv(file='./mriqc_outs/group_bold.tsv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"), sep="\t") %>% separate(data = ., col = bids_name, into = c("subject_id", "session_id", "task_id", "acq_id","run_id","type"), sep='_') %>% mutate(., subject_id=substr(subject_id, 5, 14),  session_id=substr(session_id,5, 7), acq_id=substr(acq_id, 5,7), task_id=substr(task_id,6,10))
#I should fix the above
#params=read.csv(file='/home/gabi/Documents/kimel/opt_qc/bold.csv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"))
params <- params %>% mutate(., mr_id=paste("OPT01",acq_id, substr(subject_id, 4, nchar(subject_id)),session_id,  sep="_"), acq_site=substr(acq_id, 1, 2))
rc <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% select(., record_id, redcap_event_name, redcap_data_access_group,mr_date, mr_id) %>% filter(., redcap_event_name=="baseline_arm_6"|redcap_event_name=="6_mth_fu_arm_6", !is.na(mr_id)) %>% mutate(., mr_id=toupper(substr(mr_id, 1, nchar(mr_id)-3)))
combo <- left_join(params, rc) %>% filter(., task_id == "rest")
combo$mr_date <- as.Date(combo$mr_date)
combo <- combo %>% mutate(., date_beforeaft=ifelse(mr_date<'2018-12-14', "before","after")) %>% filter(!is.na(date_beforeaft)) %>% mutate(., scanner=ifelse(acq_id=="CU1"|acq_id=="CU2", "CU1/2", acq_id))
xstart=as.Date("2017-11-18")
xend = as.Date("2018-12-14")
xstart2=xend
#xend2=as.Date(max(combo$mr_date))
xend2=as.Date(Sys.Date())
p <-  ggplot(data=combo, mapping = (aes(mr_date,fd_perc, col=acq_id)))+
theme_minimal()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
annotate("rect", xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.5)  +
annotate("rect", xmin = xstart2, xmax = xend2, ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.8)  +
geom_segment(aes(x=xstart,xend=xend2,y=35,yend=35), colour="red", linetype=2, size=0.2)  +
geom_segment(aes(x=xstart,xend=xend2,y=70,yend=70), colour="red", linetype=1, size=0.2)  +
geom_point() +
labs(color="Scanner")+
geom_vline(xintercept=as.Date('2018-12-14'), linetype=3, size) +
theme(axis.text.x  = element_text(angle=60, vjust=0.5)) +
xlab("Date of MR Scan") +
ylab("Timepoints Above Threshold (%)") +
ggtitle("Percent of TRs Above the 0.5mm FD Threshold Over Time") +
scale_x_date(date_labels = ("%b-%y")) +
facet_wrap(~scanner, ncol=2)
#maybe i ca nset the axes
p
summary <- combo %>% group_by(acq_id) %>% summarize_at(vars("fd_mean", "fd_perc"),  funs(mean = median(., na.rm = TRUE), sd=sd(.))) %>% mutate(., fd_mean=paste0(round(fd_mean_mean, digits=2), '(', round(fd_mean_sd, digits=2),')'),fd_perc=paste0(round(fd_perc_mean,2), '(', round(fd_perc_sd,2),')')) %>% select(.,acq_id, fd_mean, fd_perc)
summary %>%
kable(col.names=c("Scanner", "Median FD (SD)", "Median FD % Above 0.5mm (SD)")) %>%
kable_styling(bootstrap_options = c("striped"), full_width = F) %>%
column_spec(1, bold = T) %>%
group_rows("CU", 1, 2) %>%
group_rows("LA", 3,3) %>%
group_rows("UP", 4, 5) %>%
group_rows("UT", 6, 7) %>%
group_rows("WU", 8,9)
xstart=as.Date("2017-11-18")
xend = as.Date("2018-12-14")
xstart2=xend
#xend2=as.Date(max(combo$mr_date))
xend2=as.Date(Sys.Date())
p <-  ggplot(data=combo, mapping = (aes(mr_date,fd_mean, col=acq_id)))+
theme_minimal()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
annotate("rect", xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.5)  +
annotate("rect", xmin = xstart2, xmax = xend2, ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.8)  +
geom_point() +
geom_vline(xintercept=as.Date('2018-12-14'), linetype=3) +
facet_wrap(~scanner, ncol=2)  +
theme(axis.text.x  = element_text(angle=60, vjust=0.5)) +
xlab("Date of MR Scan") +
ylab("Mean FD (mm)") +
ggtitle("Mean Framewise Displacement Over Time") +
scale_x_date(date_labels = ("%b-%y"))
p
rc <-
View(rc)
knitr::opts_chunk$set(echo = FALSE, warning= FALSE, error=FALSE, message = FALSE)
#params_init=read.csv(file='/scratch/gherman/mriqc/bold_init.csv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"))
params=read.csv(file='./mriqc_outs/group_bold.tsv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"), sep="\t") %>% separate(data = ., col = bids_name, into = c("subject_id", "session_id", "task_id", "acq_id","run_id","type"), sep='_') %>% mutate(., subject_id=substr(subject_id, 5, 14),  session_id=substr(session_id,5, 7), acq_id=substr(acq_id, 5,7), task_id=substr(task_id,6,10))
#I should fix the above
#params=read.csv(file='/home/gabi/Documents/kimel/opt_qc/bold.csv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"))
params <- params %>% mutate(., mr_id=paste("OPT01",acq_id, substr(subject_id, 4, nchar(subject_id)),session_id,  sep="_"), acq_site=substr(acq_id, 1, 2))
rc <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% mutate(., mr_id=toupper(substr(mr_id, 1, nchar(mr_id)-3)))
#%>% filter(., redcap_event_name=="baseline_arm_6"|redcap_event_name=="6_mth_fu_arm_6", !is.na(mr_id)) %>% mutate(., mr_id=toupper(substr(mr_id, 1, nchar(mr_id)-3)))
combo <- left_join(params, rc) %>% filter(., task_id == "rest")
combo$mr_date <- as.Date(combo$mr_date)
combo <- combo %>% mutate(., date_beforeaft=ifelse(mr_date<'2018-12-14', "before","after")) %>% filter(!is.na(date_beforeaft)) %>% mutate(., scanner=ifelse(acq_id=="CU1"|acq_id=="CU2", "CU1/2", acq_id))
View(rc)
rc %>% filter(record_id=="CU10001", redcap_repeat_instrument=="optimum_neuro_mri")
#params_init=read.csv(file='/scratch/gherman/mriqc/bold_init.csv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"))
params=read.csv(file='./mriqc_outs/group_bold.tsv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"), sep="\t") %>% separate(data = ., col = bids_name, into = c("subject_id", "session_id", "task_id", "acq_id","run_id","type"), sep='_') %>% mutate(., subject_id=substr(subject_id, 5, 14),  session_id=substr(session_id,5, 7), acq_id=substr(acq_id, 5,7), task_id=substr(task_id,6,10))
#I should fix the above
#params=read.csv(file='/home/gabi/Documents/kimel/opt_qc/bold.csv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"))
params <- params %>% mutate(., mr_id=paste("OPT01",acq_id, substr(subject_id, 4, nchar(subject_id)),session_id,  sep="_"), acq_site=substr(acq_id, 1, 2))
mri_IDs <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE)%>% filter(., redcap_event_name=="baseline_arm_6"|redcap_event_name=="6_mth_fu_arm_6", !is.na(mr_id))  %>% mutate(., mr_id=toupper(substr(mr_id, 1, nchar(mr_id)-3)))
combo <- left_join(params, rc) %>% filter(., task_id == "rest")
combo$mr_date <- as.Date(combo$mr_date)
combo <- combo %>% mutate(., date_beforeaft=ifelse(mr_date<'2018-12-14', "before","after")) %>% filter(!is.na(date_beforeaft)) %>% mutate(., scanner=ifelse(acq_id=="CU1"|acq_id=="CU2", "CU1/2", acq_id))
View(mri_IDs)
phq_9s <-read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE)%>% filter(!is.na(phq9_total_score)
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score))
?group_by
?summarise
phq_9s %>% group_by(record_id) %>% summarize(mean=mean(phq9_total_score))
phq_9s %>% group_by(record_id) #%>% summarize(mean=mean(phq9_total_score))
phq_9s %>% group_by(record_id) %>% summarize(n=n())
phq_9s %>% group_by(record_id) %>% summarize(n = n())
test
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score))
test <- phq_9s %>% group_by(record_id)
test
str(test)
groups(test)
test <- phq_9s %>% group_by(record_id)
groups(test)
test %>% summarize(n=n())
test %>% summarize(n=sum(n))
test %>% summarize(n=sum(phq9_total_score))
View(test)
str(test$record_id)
test %>% dplyr::summarize(n=sum(phq9_total_score))
phq_9s %>% group_by(record_id) %>% dplyr::summarize(mean=mean(phq9_total_score))
phq_avgs <- phq_9s %>% group_by(record_id) %>% dplyr::summarize(mean=mean(phq9_total_score))
combo <- left_join(params, rc) %>% filter(., task_id == "rest")
#params_init=read.csv(file='/scratch/gherman/mriqc/bold_init.csv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"))
params=read.csv(file='./mriqc_outs/group_bold.tsv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"), sep="\t") %>% separate(data = ., col = bids_name, into = c("subject_id", "session_id", "task_id", "acq_id","run_id","type"), sep='_') %>% mutate(., subject_id=substr(subject_id, 5, 14),  session_id=substr(session_id,5, 7), acq_id=substr(acq_id, 5,7), task_id=substr(task_id,6,10))
#I should fix the above
#params=read.csv(file='/home/gabi/Documents/kimel/opt_qc/bold.csv',header=TRUE, stringsAsFactors = FALSE, na.strings=c("NA", '', ' '),colClasses=c("session_id"="character"))
params <- params %>% mutate(., mr_id=paste("OPT01",acq_id, substr(subject_id, 4, nchar(subject_id)),session_id,  sep="_"), acq_site=substr(acq_id, 1, 2))
rc <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE)%>% filter(., redcap_event_name=="baseline_arm_6"|redcap_event_name=="6_mth_fu_arm_6", !is.na(mr_id))  %>% mutate(., mr_id=toupper(substr(mr_id, 1, nchar(mr_id)-3)))
combo <- left_join(params, rc) %>% filter(., task_id == "rest")
combo$mr_date <- as.Date(combo$mr_date)
combo <- combo %>% mutate(., date_beforeaft=ifelse(mr_date<'2018-12-14', "before","after")) %>% filter(!is.na(date_beforeaft)) %>% mutate(., scanner=ifelse(acq_id=="CU1"|acq_id=="CU2", "CU1/2", acq_id))
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score))
phq_avgs <- phq_9s %>% group_by(record_id) %>% dplyr::summarize(mean=mean(phq9_total_score))
?merge
merge(rc, phq_avgs, by=record_id, all.x=TRUE, all.y=TRUE)
View(rc)
View(phq_avgs)
merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
phq_mr <- merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score)) %>% filter(record_id in rc$record_id)
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score)) %>% filter(record_id %in% rc$record_id)
phq_avgs <- phq_9s %>% group_by(record_id) %>% dplyr::summarize(mean=mean(phq9_total_score))
phq_mr <- merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
View(phq_mr)
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score)) %>% filter(record_id %in% rc$record_id)
phq_avgs <- phq_9s %>% group_by(record_id) %>% dplyr::summarize(mean_phq9=mean(phq9_total_score))
phq_mr <- merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score)) %>% filter(record_id %in% rc$record_id)
phq_avgs <- phq_9s %>% group_by(record_id) %>% dplyr::summarize(mean_phq9=mean(phq9_total_score))
phq_mr <- merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
combo99 <- left_join(params, rc) %>% filter(., task_id == "rest")
combo99$mr_date <- as.Date(combo99$mr_date)
phq_mr <- merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
combo99 <- left_join(params, phq_mr) %>% filter(., task_id == "rest")
combo99$mr_date <- as.Date(combo99$mr_date)
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score)) %>% filter(record_id %in% rc$record_id)
phq_avgs <- phq_9s %>% group_by(record_id) %>% dplyr::summarize(mean_phq9=mean(phq9_total_score))
phq_mr <- merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
combo99 <- left_join(params, phq_mr) %>% filter(., task_id == "rest")
combo99$mr_date <- as.Date(combo99$mr_date)
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) ) + geom_point()
?median
phq_9s <- read.csv(file='/projects/gherman/OPT_motion_vs_phq/in/OPTIMUMMainDatabaseF_DATA_2019-09-24_1307.csv', stringsAsFactors = FALSE, na.strings=c("NA",'', ' '), check.names = FALSE) %>% filter(!is.na(phq9_total_score)) %>% filter(record_id %in% rc$record_id)
phq_avgs <- phq_9s %>% group_by(record_id) %>% dplyr::summarize(mean_phq9=median(phq9_total_score)) #should probably actually pick the phq 9 that is closest in date
phq_mr <- merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
combo99 <- left_join(params, phq_mr) %>% filter(., task_id == "rest")
combo99$mr_date <- as.Date(combo99$mr_date)
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) ) + geom_point()
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) ) + geom_point() +
facet_wrap(~scanner, ncol=2)
phq_mr <- merge(rc, phq_avgs, by="record_id", all.x=TRUE, all.y=TRUE)
combo99 <- left_join(params, phq_mr) %>% filter(., task_id == "rest")%>% mutate(., scanner=ifelse(acq_id=="CU1"|acq_id=="CU2", "CU1/2", acq_id))
combo99$mr_date <- as.Date(combo99$mr_date)
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) ) + geom_point() +
facet_wrap(~scanner, ncol=2)
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) ) + geom_point() + geom_smooth()+
facet_wrap(~scanner, ncol=2)
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) ) + geom_point() + geom_smooth(method='lm')+
facet_wrap(~scanner, ncol=2)
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) ) + geom_point() + geom_smooth(method='lm')#+
#facet_wrap(~scanner, ncol=2)
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean) ) + geom_point() + geom_smooth(method='lm')#+
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) ) + geom_point() + geom_smooth(method='lm')+
facet_wrap(~scanner, ncol=2)
ggplot(data=combo99, mapping = aes(mean_phq9,fd_mean, col=acq_id) )+ geom_boxplot(outlier.shape=NA, width=0.8)
ggplot(data=combo99, mapping = aes(mean_phq9, col=acq_id) )+ geom_boxplot(outlier.shape=NA, width=0.8)
ggplot(data=combo99, mapping = aes(mean_phq9,acq_id, col=acq_id) )+ geom_boxplot(outlier.shape=NA, width=0.8)
ggplot(data=combo99, mapping = aes(acq_id, mean_phq9, col=acq_id) )+ geom_boxplot(outlier.shape=NA, width=0.8)
# load graphics libraries
library(plyr)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(knitr)
library(kableExtra)
library(plotly)
library(stringr)
library(bsselectR)
library(lubridate)
library(textclean)
source('functions.R')
#read in data
df <- read.csv('/home/gherman/Downloads/OPTIMUMMainDatabaseF_DATA_2019-10-03_0919.csv', na.strings=c("","NA")) #contains all but MRI
mri <- read.csv('/home/gherman/Downloads/OPTIMUMMainDatabaseF_DATA_2019-10-03_0918.csv', na.strings=c("","NA")) #contains just MRI
targets <- read.csv('info/OPT_recruitTargets.csv')
#make sure target data is in proper format
targets$month <- as.character(targets$month)
sites <- factor(x = c('CU', 'LA', 'UP', 'UT', 'WU'), levels = c('CU', 'LA', 'UP', 'UT', 'WU'))
df <- prepare_init_df(df, mri, sites)
#make a smaller dataframe
recruit_df <- df[, c(
"record_id",
"site",
"timepoint",
"meta_consent_date",
"meta_terminate_date",
"meta_terminate_reason",
"plasma_blood_status",
"plasma_blood_date",
"mr_t1",
"mr_date",
"dkefs_complete",
"dkefs_date_admin",
"rbans_complete",
"rbans_date_admin")]
recruit_df <- prepare_recruit_df(recruit_df)
#add column that indicates if enrolled (where enrollment is 2 of 3 mri, blood, neuropsych)
enroll_df <- prepare_enroll_df(recruit_df) #make a new dataframe (did this because want new DF to consider only baseline)
#merge back dataframes #what's the purpose of merging it here?
recruit_df <- merge(recruit_df, enroll_df, by = c('record_id', 'timepoint'), all.x = TRUE)
#note to self.... the enrollmrimth thing doesnt really work as the only indicator, it should really be combined with mr_t1 (which is enroll_mri i guess) to give an accurate picture of numbers.
fu_due_list <- recruit_df%>% select(record_id,mri_fu_due, np_fu_due, bld_fu_due, mri_fu_7_mos, np_fu_7_mos,bld_fu_7_mos, enroll_mri_init,mri_fu_mth, mri_fu_mthT ) %>% filter(!is.na(mri_fu_due) | !is.na( np_fu_due) | !is.na( bld_fu_due)| !is.na(mri_fu_7_mos)| !is.na(np_fu_7_mos) | !is.na(bld_fu_7_mos))
fu_due_list <- fu_due_list[!duplicated(fu_due_list$record_id),]
#maybe I actually need to compare this to how many ppl actuvally received their init mri
fu_df <- recruit_df %>% filter(.,timepoint=="6 mth FU") %>% select(.,-c(enroll_mri, enroll_mri_date))
fu_df <- prep_fu_df(fu_df) %>% merge(.,fu_due_list, by=c('record_id'))
recruit_table <- make_recruit_table(recruit_df, sites, targets)
#turns NAs into dashes
options(knitr.kable.NA = '--')
#table
kable(recruit_table, "html", escape = F, align = c('l', 'c', 'c', 'c', 'c', 'c', 'c')) %>%
kable_styling("hover", "condensed", full_width = T) %>%
add_header_above(c(" ", "CU" = 2, "LA" = 2, "UP" = 2, "UT" = 2, "WU" = 2, " ")) %>%
group_rows('Consent[note]', 1, 2, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Enrollment[note]", 3, 4, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Completion[note]", 5, 6, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Termination[note]", 7, 9, label_row_css = "background-color: #ddd; color: 999;") %>%
column_spec(1, width = "20em", background = '#f5f5f5') %>%
add_footnote(c("`Consent` counts all participants who signed an OPTIMUM-Neuro consent form.",
"`Enrollment` counts all participants who completed ≥2/3 of the MRI, bloodwork, and neuropsych at the baseline visit.",
"`Completion` counts all enrolled participants who completed the 24 mth FU visit.",
"`Termination` counts participants coded as: 'not eligible for randomization', 'withdrew', 'lost to follow-up', 'death', 'investigator discretion', and 'other'. Termination does not capture participants who completed the study, i.e., this category is independent from `Completion`."),
notation = "number") %>%
footnote(general = "Current month captures calendar month. The `%` columns calculate percentage of target, with all sites having common targets.")
enroll_table <- make_enroll_table(recruit_df, sites, targets)
#add row names to make like demo table
enroll_table <- cbind(metric = rownames(enroll_table), enroll_table)
rownames(enroll_table) <- NULL
#turns NAs into dashes
options(knitr.kable.NA = '--')
#table
kable(enroll_table, "html", escape = F, align = c('l', 'c', 'c', 'c', 'c', 'c', 'c')) %>%
kable_styling("hover", "condensed", full_width = T) %>%
add_header_above(c(" ", "CU" = 2, "LA" = 2, "UP" = 2, "UT" = 2, "WU" = 2, " ")) %>%
group_rows('Neuropsych[note]', 1, 2, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Blood[note]", 3, 4, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("MRI[note]", 5, 6, label_row_css = "background-color: #ddd; color: 999;") %>%
column_spec(1, width = "20em", background = '#f5f5f5') %>%
add_footnote(c(
"`Neuropsych` counts all participants who completed both the RBANS and D-KEFS in full.",
"`Blood` counts all participants who submitted one aliquot of plasma.",
"`MRI` counts all participants who completed the T1."),
notation = "number") %>%
footnote(general = "Current month captures calendar month. The `%` columns calculate percentage of target, with all sites having common targets.")
fu_table <- make_fu_table(fu_df, sites,targets)
#add row names to make like demo table
fu_table <- cbind(metric = rownames(fu_table), fu_table)
rownames(fu_table) <- NULL
#turns NAs into dashes
options(knitr.kable.NA = '--')
#table
kable(fu_table, "html", escape = F, align = c('l', 'c', 'c', 'c', 'c', 'c', 'c')) %>%
kable_styling("hover", "condensed", full_width = T) %>%
add_header_above(c(" ", "CU" = 2, "LA" = 2, "UP" = 2, "UT" = 2, "WU" = 2, " ")) %>%
group_rows('Neuropsych[note]', 1, 2, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Blood[note]", 3, 4, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("MRI[note]", 5, 6, label_row_css = "background-color: #ddd; color: 999;") %>%
column_spec(1, width = "20em", background = '#f5f5f5') %>%
add_footnote(c(
"`Neuropsych` counts all participants who completed both the follow-up RBANS and D-KEFS in full.",
"`Blood` counts all participants who submitted one aliquot of plasma for bloodwork follow-up.",
"`MRI` counts all participants who completed the T1 follow-up."),
notation = "number") %>%
footnote(general = "Current month captures calendar month. The `%` columns describe percent retention - what proportion of participants who received their baseline scan have received their 6 month follow-up in time.")
demo_table <- make_demo_table(df, sites)
demo_table$p <- as.numeric(demo_table$p)
#table
demo_table %>%
mutate(
metric = row.names(demo_table),
p = cell_spec(p, "html", color = ifelse(p < 0.05, "red", "black"))
) %>%
select(metric, CU, LA, UP, UT, WU, p) %>%
kable('html', escape = F, align = c('l', 'c', 'c', 'c', 'c', 'c', 'c')) %>%
kable_styling("hover", full_width = T) %>%
column_spec(1, width = "20em", background = '#f5f5f5') %>%
footnote(general = "These values represent all participants consented at the OPTIMUM-Neuro baseline visit. It does not take into account the participants who consented but did not meet enrollment criteria, and/or who later terminated. Values in brackets are standard deviation. The _p_ values result from Chi-squared for categorical variables and omnibus ANOVA for continuous variables.")
rm(demo_df, demo_table)
View(recruit_df)
recruit_df$enroll
test
test <- filter(recruit_df, enroll==1)
test
View(test)
test <- filter(recruit_df, enroll==1) %>% filter(site.x=="UT")
test <- filter(recruit_df, enroll==1) %>% filter(site.x=="UT")
setdiff(test$record_id,gold_enrl)
gold_enrl <- c("UT10001",
"UT10013",
"UT10003",
"UT10004",
"UT10015",
"UT10039",
"UT10035",
"UT10053",
"UT10054",
"UT10017",
"UT10025",
"UT10046",
"UT10016",
"UT10033",
"UT10060",
"UT10023",
"UT10061",
"UT10019",
"UT10058",
"UT10075",
"UT10066",
"UT10067",
"UT10080",
"UT10006",
"UT10028",
"UT10079",
"UT10072",
"UT10083",
"UT10073",
"UT10018",
"UT10027",
"UT10078",
"UT10087",
"UT10090",
"UT10091",
"UT10021",
"UT10101",
"UT30001",
"UT10109",
"UT30002",
"UT30003",
"UT10116",
"UT10111",
"UT10115",
"UT10099",
"UT10081",
"UT10120",
"UT10114",
"UT30004",
"UT10123")
#n = sum(recruit_df[recruit_df$site.x == site, 'enroll'])
#d = targets[targets$month == as.character(substr(Sys.Date(), 1, 7)), 'target']
setdiff(test$record_id,gold_enrl)
setdiff(gold_enrl, test$record_id)
test <- filter(recruit_df, enroll==1) %>% filter(site.x=="LA")
test$record_id
View(test)
# load graphics libraries
library(plyr)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(knitr)
library(kableExtra)
library(plotly)
library(stringr)
library(bsselectR)
library(lubridate)
library(textclean)
source('functions.R')
#read in data
df <- read.csv('/home/gherman/Downloads/OPTIMUMMainDatabaseF_DATA_2019-10-17_1014.csv', na.strings=c("","NA")) #contains all but MRI
mri <- read.csv('/home/gherman/Downloads/OPTIMUMMainDatabaseF_DATA_2019-10-17_1012.csv', na.strings=c("","NA")) #contains just MRI
targets <- read.csv('info/OPT_recruitTargets.csv')
#make sure target data is in proper format
targets$month <- as.character(targets$month)
sites <- factor(x = c('CU', 'LA', 'UP', 'UT', 'WU'), levels = c('CU', 'LA', 'UP', 'UT', 'WU'))
df <- prepare_init_df(df, mri, sites)
#make a smaller dataframe
recruit_df <- df[, c(
"record_id",
"site",
"timepoint",
"meta_consent_date",
"meta_terminate_date",
"meta_terminate_reason",
"plasma_blood_status",
"plasma_blood_date",
"mr_t1",
"mr_date",
"dkefs_complete",
"dkefs_date_admin",
"rbans_complete",
"rbans_date_admin")]
recruit_df <- prepare_recruit_df(recruit_df)
#add column that indicates if enrolled (where enrollment is 2 of 3 mri, blood, neuropsych)
enroll_df <- prepare_enroll_df(recruit_df) #make a new dataframe (did this because want new DF to consider only baseline)
#merge back dataframes #what's the purpose of merging it here?
recruit_df <- merge(recruit_df, enroll_df, by = c('record_id', 'timepoint'), all.x = TRUE)
#note to self.... the enrollmrimth thing doesnt really work as the only indicator, it should really be combined with mr_t1 (which is enroll_mri i guess) to give an accurate picture of numbers.
fu_due_list <- recruit_df%>% select(record_id,mri_fu_due, np_fu_due, bld_fu_due, mri_fu_7_mos, np_fu_7_mos,bld_fu_7_mos, enroll_mri_init,mri_fu_mth, mri_fu_mthT ) %>% filter(!is.na(mri_fu_due) | !is.na( np_fu_due) | !is.na( bld_fu_due)| !is.na(mri_fu_7_mos)| !is.na(np_fu_7_mos) | !is.na(bld_fu_7_mos))
fu_due_list <- fu_due_list[!duplicated(fu_due_list$record_id),]
#maybe I actually need to compare this to how many ppl actuvally received their init mri
fu_df <- recruit_df %>% filter(.,timepoint=="6 mth FU") %>% select(.,-c(enroll_mri, enroll_mri_date))
fu_df <- prep_fu_df(fu_df) %>% merge(.,fu_due_list, by=c('record_id'))
recruit_table <- make_recruit_table(recruit_df, sites, targets)
#turns NAs into dashes
options(knitr.kable.NA = '--')
#table
kable(recruit_table, "html", escape = F, align = c('l', 'c', 'c', 'c', 'c', 'c', 'c')) %>%
kable_styling("hover", "condensed", full_width = T) %>%
add_header_above(c(" ", "CU" = 2, "LA" = 2, "UP" = 2, "UT" = 2, "WU" = 2, " ")) %>%
group_rows('Consent[note]', 1, 2, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Enrollment[note]", 3, 4, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Completion[note]", 5, 6, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Termination[note]", 7, 9, label_row_css = "background-color: #ddd; color: 999;") %>%
column_spec(1, width = "20em", background = '#f5f5f5') %>%
add_footnote(c("`Consent` counts all participants who signed an OPTIMUM-Neuro consent form.",
"`Enrollment` counts all participants who completed ≥2/3 of the MRI, bloodwork, and neuropsych at the baseline visit.",
"`Completion` counts all enrolled participants who completed the 24 mth FU visit.",
"`Termination` counts participants coded as: 'not eligible for randomization', 'withdrew', 'lost to follow-up', 'death', 'investigator discretion', and 'other'. Termination does not capture participants who completed the study, i.e., this category is independent from `Completion`."),
notation = "number") %>%
footnote(general = "Current month captures calendar month. The `%` columns calculate percentage of target, with all sites having common targets.")
enroll_table <- make_enroll_table(recruit_df, sites, targets)
#add row names to make like demo table
enroll_table <- cbind(metric = rownames(enroll_table), enroll_table)
rownames(enroll_table) <- NULL
#turns NAs into dashes
options(knitr.kable.NA = '--')
#table
kable(enroll_table, "html", escape = F, align = c('l', 'c', 'c', 'c', 'c', 'c', 'c')) %>%
kable_styling("hover", "condensed", full_width = T) %>%
add_header_above(c(" ", "CU" = 2, "LA" = 2, "UP" = 2, "UT" = 2, "WU" = 2, " ")) %>%
group_rows('Neuropsych[note]', 1, 2, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Blood[note]", 3, 4, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("MRI[note]", 5, 6, label_row_css = "background-color: #ddd; color: 999;") %>%
column_spec(1, width = "20em", background = '#f5f5f5') %>%
add_footnote(c(
"`Neuropsych` counts all participants who completed both the RBANS and D-KEFS in full.",
"`Blood` counts all participants who submitted one aliquot of plasma.",
"`MRI` counts all participants who completed the T1."),
notation = "number") %>%
footnote(general = "Current month captures calendar month. The `%` columns calculate percentage of target, with all sites having common targets.")
fu_table <- make_fu_table(fu_df, sites,targets)
#add row names to make like demo table
fu_table <- cbind(metric = rownames(fu_table), fu_table)
rownames(fu_table) <- NULL
#turns NAs into dashes
options(knitr.kable.NA = '--')
#table
kable(fu_table, "html", escape = F, align = c('l', 'c', 'c', 'c', 'c', 'c', 'c')) %>%
kable_styling("hover", "condensed", full_width = T) %>%
add_header_above(c(" ", "CU" = 2, "LA" = 2, "UP" = 2, "UT" = 2, "WU" = 2, " ")) %>%
group_rows('Neuropsych[note]', 1, 2, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("Blood[note]", 3, 4, label_row_css = "background-color: #ddd; color: 999;") %>%
group_rows("MRI[note]", 5, 6, label_row_css = "background-color: #ddd; color: 999;") %>%
column_spec(1, width = "20em", background = '#f5f5f5') %>%
add_footnote(c(
"`Neuropsych` counts all participants who completed both the follow-up RBANS and D-KEFS in full.",
"`Blood` counts all participants who submitted one aliquot of plasma for bloodwork follow-up.",
"`MRI` counts all participants who completed the T1 follow-up."),
notation = "number") %>%
footnote(general = "Current month captures calendar month. The `%` columns describe percent retention - what proportion of participants who received their baseline scan have received their 6 month follow-up in time.")
demo_table <- make_demo_table(df, sites)
demo_table$p <- as.numeric(demo_table$p)
#table
demo_table %>%
mutate(
metric = row.names(demo_table),
p = cell_spec(p, "html", color = ifelse(p < 0.05, "red", "black"))
) %>%
select(metric, CU, LA, UP, UT, WU, p) %>%
kable('html', escape = F, align = c('l', 'c', 'c', 'c', 'c', 'c', 'c')) %>%
kable_styling("hover", full_width = T) %>%
column_spec(1, width = "20em", background = '#f5f5f5') %>%
footnote(general = "These values represent all participants consented at the OPTIMUM-Neuro baseline visit. It does not take into account the participants who consented but did not meet enrollment criteria, and/or who later terminated. Values in brackets are standard deviation. The _p_ values result from Chi-squared for categorical variables and omnibus ANOVA for continuous variables.")
rm(demo_df, demo_table)
test <- filter(recruit_df, enroll==1) %>% filter(site.x=="LA")
View(test)
test2 <- filter(recruit_df, consented==1) %>% filter(site.x=="LA")
test2 <- filter(recruit_df, recruit_df$consented==1) %>% filter(site.x=="LA")
test2 <- filter(recruit_df, recruit_df$consented==1)
recruit_df$consented.x
test2 <- filter(recruit_df, recruit_df$consented.x==1)
View(test2)
test2 <- filter(recruit_df, recruit_df$consented.x==1)  %>% filter(site.x=="LA")
