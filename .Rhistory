T1 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T1w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16))%>% filter(subj!="sub-05")
cnr <- plot_mriqc_metric(T1,"cnr")
snr_total <- plot_mriqc_metric(T1, "snr_total")
snrd_total <- plot_mriqc_metric(T1, "snrd_total")
fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
cjv <- plot_mriqc_metric(T1, "cjv")
efc <- plot_mriqc_metric(T1, "efc")
grid_arrange_shared_legend(cnr, snr_total)
T2 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T2w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16))
T2 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T2w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16))%>% filter(subj!="sub-05")
cnr <- plot_mriqc_metric(T2,"cnr")
snr_total <- plot_mriqc_metric(T2, "snr_total")
snrd_total <- plot_mriqc_metric(T2, "snrd_total")
fwhm_avg <- plot_mriqc_metric(T2, "fwhm_avg")
cjv <- plot_mriqc_metric(T2, "cjv")
efc <- plot_mriqc_metric(T2, "efc")
grid_arrange_shared_legend(cnr, snr_total,snrd_total, fwhm_avg, cjv, efc)
cnr <- plot_mriqc_metric(T2,"cnr")
snr_total <- plot_mriqc_metric(T2, "snr_total")
snrd_total <- plot_mriqc_metric(T2, "snrd_total")
fwhm_avg <- plot_mriqc_metric(T2, "fwhm_avg")
cjv <- plot_mriqc_metric(T2, "cjv")
efc <- plot_mriqc_metric(T2, "efc")
grid_arrange_shared_legend(cnr, snr_total)
#So whether to use dietrich's SNR vs just SNR
plot_mriqc_metric <- function(mriqc,metric){
return (ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank()) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title")))  +
xlab("My x label")
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr")
snr <- plot_mriqc_metric(func, "snr")
fd_mean <- plot_mriqc_metric(func,"fd_mean")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
efc <- plot_mriqc_metric(func, "efc")
aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
plot_mriqc_metric <- function(mriqc,metric){
return (ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank()) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title")))  +
ylab("My x label")
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr")
snr <- plot_mriqc_metric(func, "snr")
fd_mean <- plot_mriqc_metric(func,"fd_mean")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
efc <- plot_mriqc_metric(func, "efc")
aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
plot_mriqc_metric <- function(mriqc,metric){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text()+labs(y="test legend")) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
func<- read.csv('/projects/gherman/SPINS_human_phantoms/group_bold.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16), parent_site=substr(bids_name,14,15)) %>% mutate(scanner_type= ifelse(substr(bids_name,16,16)=="P", "prisma","GE")) %>% filter(subj!="sub-05")
mriqc=func
metric="tsnr"
fillz=c(NA, "black",NA,"black",NA,"black")
names(fillz)= c("CMH", "CMP", "MRC" ,"MRP", "ZHH" ,"ZHP")
ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.8)+ geom_jitter(width=0.1, aes( fill=scanner_type, shape=parent_site))+theme_classic(base_size=6)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank()) +scale_shape_manual(values=c(21,23,24))+scale_fill_manual(values=c(NA,"black")) +guides(fill=guide_legend("title"), shape=guide_legend("title"))
mriqc=func
metric="tsnr"
#shapez=c(21,23,24,21,23,24)
shapez=c("\u26AA","\u2605","\u2662","\u26AB","\u2606","\u2666") #cool so this works but not when the types are mixed
#OKAY so im gonna use unicode yayeart
names(shapez)=c("CMH","MRP","ZHH","CMP","MRC","ZHP")
fillz=c(NA,"black",NA,"black",NA,"black")
names(fillz)=c("CMH","MRP","ZHH","CMP","MRC","ZHP")
ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_jitter(width=0.1, size=6, aes( fill=site, shape=site))+theme_classic(base_size=12)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank()) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title"))
tsnr <- plot_mriqc_metric(func,"tsnr")
plot_mriqc_metric <- function(mriqc,metric){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y="test legend") +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr")
snr <- plot_mriqc_metric(func, "snr")
fd_mean <- plot_mriqc_metric(func,"fd_mean")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
efc <- plot_mriqc_metric(func, "efc")
aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
plot_mriqc_metric <- function(mriqc,metric,title){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y="test legend") +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","Signal-to-Noise Ratio (SNR)")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean Framewise Displacement (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
plot_mriqc_metric <- function(mriqc,metric,title){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y=title) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","Signal-to-Noise Ratio (SNR)")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean Framewise Displacement (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","SNR")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean FD (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
cnr <- plot_mriqc_metric(T1,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T1, "snr_total", "SNR")
#snrd_total <- plot_mriqc_metric(T1, "snrd_total")
#fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
#cjv <- plot_mriqc_metric(T1, "cjv")
#efc <- plot_mriqc_metric(T1, "efc")
grid_arrange_shared_legend(cnr, snr_total)
T2 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T2w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16))%>% filter(subj!="sub-05")
snr_total <- plot_mriqc_metric(T2, "snr_total", "SNR")
cnr <- plot_mriqc_metric(T2,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T2, "snr_total", "SNR")
#snrd_total <- plot_mriqc_metric(T2, "snrd_total")
#fwhm_avg <- plot_mriqc_metric(T2, "fwhm_avg")
#cjv <- plot_mriqc_metric(T2, "cjv")
#efc <- plot_mriqc_metric(T2, "efc")
grid_arrange_shared_legend(cnr, snr_total)
#So whether to use dietrich's SNR vs just SNR
fd_mean <- plot_mriqc_metric(dti,"qc_mot_relative","Mean FD (mm)")
snr <- plot_mriqc_metric(dti, "avg_snr_0","SNR")
cnr <- plot_mriqc_metric(dti,"avg_cnr_1000","CNR")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(snr, cnr, fd_mean)
View(dti)
fd_mean <- plot_mriqc_metric(dti,"qc_mot_rel","Mean FD (mm)")
snr <- plot_mriqc_metric(dti, "avg_snr_0","SNR")
cnr <- plot_mriqc_metric(dti,"avg_cnr_1000","CNR")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(snr, cnr, fd_mean)
?ggsave
ggsave(file="plotahijsfads.svg",plt, width =7, height=5)
install.packages("svglite")
ggsave(file="plotahijsfads.tiff",plt, width =7, height=5)
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","SNR")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean FD (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
ggsave(file="../out/fmri_plots.tiff",plt, width =7, height=5)
plt
cnr <- plot_mriqc_metric(T1,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T1, "snr_total", "SNR")
#snrd_total <- plot_mriqc_metric(T1, "snrd_total")
#fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
#cjv <- plot_mriqc_metric(T1, "cjv")
#efc <- plot_mriqc_metric(T1, "efc")
plt <- grid_arrange_shared_legend(cnr, snr_total)
ggsave(file="../out/t1_plots.tiff",plt, width =7, height=5)
plt
cnr <- plot_mriqc_metric(T1,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T1, "snr_total", "SNR")
#snrd_total <- plot_mriqc_metric(T1, "snrd_total")
#fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
#cjv <- plot_mriqc_metric(T1, "cjv")
#efc <- plot_mriqc_metric(T1, "efc")
plt <- grid_arrange_shared_legend(cnr, snr_total)
ggsave(file="../out/t1_plots.tiff",plt, width =7, height=3)
plt
cnr <- plot_mriqc_metric(T1,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T1, "snr_total", "SNR")
#snrd_total <- plot_mriqc_metric(T1, "snrd_total")
#fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
#cjv <- plot_mriqc_metric(T1, "cjv")
#efc <- plot_mriqc_metric(T1, "efc")
plt <- grid_arrange_shared_legend(cnr, snr_total)
ggsave(file="../out/t1_plots.tiff",plt, width =5, height=5)
plt
cnr <- plot_mriqc_metric(T1,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T1, "snr_total", "SNR")
#snrd_total <- plot_mriqc_metric(T1, "snrd_total")
#fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
#cjv <- plot_mriqc_metric(T1, "cjv")
#efc <- plot_mriqc_metric(T1, "efc")
plt <- grid_arrange_shared_legend(cnr, snr_total)
ggsave(file="../out/t1_plots.tiff",plt, width =5, height=4)
plt
cnr <- plot_mriqc_metric(T1,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T1, "snr_total", "SNR")
#snrd_total <- plot_mriqc_metric(T1, "snrd_total")
#fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
#cjv <- plot_mriqc_metric(T1, "cjv")
#efc <- plot_mriqc_metric(T1, "efc")
plt <- grid_arrange_shared_legend(cnr, snr_total)
ggsave(file="../out/t1_plots.tiff",plt, width =7, height=5) #might have to fix it in illustrator after or something...
plt
cnr <- plot_mriqc_metric(T1,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T1, "snr_total", "SNR")
snrd_total <- plot_mriqc_metric(T1, "snrd_total", "SNRD(remove)")
#fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
#cjv <- plot_mriqc_metric(T1, "cjv")
#efc <- plot_mriqc_metric(T1, "efc")
plt <- grid_arrange_shared_legend(snrd_total,cnr, snr_total)
ggsave(file="../out/t1_plots.tiff",plt, width =7, height=5) #might have to fix it in illustrator after or something...
plt
fd_mean <- plot_mriqc_metric(dti,"qc_mot_rel","Mean FD (mm)")
snr <- plot_mriqc_metric(dti, "avg_snr_0","SNR")
cnr <- plot_mriqc_metric(dti,"avg_cnr_1000","CNR")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(snr, cnr, fd_mean)
ggsave(file="../out/dwi_plots.tiff",plt, width =7, height=5) #might have to fix it in illustrator after or something...
fd_mean <- plot_mriqc_metric(dti,"qc_mot_rel","Mean FD (mm)")
snr <- plot_mriqc_metric(dti, "avg_snr_0","SNR")
cnr <- plot_mriqc_metric(dti,"avg_cnr_1000","CNR")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(cnr, snr, fd_mean)
ggsave(file="../out/dwi_plots.tiff",plt, width =7, height=5) #might have to fix it in illustrator after or something...
plot_mriqc_metric <- function(mriqc,metric,title){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y=title) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6, legend.title = element_blank()))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","SNR")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean FD (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
#ggsave(file="../out/fmri_plots.tiff",plt, width =7, height=5)
#plt
plot_mriqc_metric <- function(mriqc,metric,title){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y=title) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("title"), shape=guide_legend("title"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6, legend.title = element_blank()))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","SNR")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean FD (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
#ggsave(file="../out/fmri_plots.tiff",plt, width =7, height=5)
#plt
plot_mriqc_metric <- function(mriqc,metric,title){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y=title) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("sfdsdafdads"), shape=guide_legend("title"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","SNR")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean FD (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
#ggsave(file="../out/fmri_plots.tiff",plt, width =7, height=5)
#plt
plot_mriqc_metric <- function(mriqc,metric,title){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y=title) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend(""), shape=guide_legend(""))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","SNR")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean FD (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
#ggsave(file="../out/fmri_plots.tiff",plt, width =7, height=5)
#plt
plot_mriqc_metric <- function(mriqc,metric,title){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=2)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y=title) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("scanner"), shape=guide_legend("scanner"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
tsnr <- plot_mriqc_metric(func,"tsnr","tSNR")
snr <- plot_mriqc_metric(func, "snr","SNR")
fd_mean <- plot_mriqc_metric(func,"fd_mean","Mean FD (mm)")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(tsnr, snr, fd_mean)
ggsave(file="../out/fmri_plots.tiff",plt, width =7, height=5)
plt
cnr <- plot_mriqc_metric(T1,"cnr", "CNR")
snr_total <- plot_mriqc_metric(T1, "snr_total", "SNR")
snrd_total <- plot_mriqc_metric(T1, "snrd_total", "SNRD(remove)")
#fwhm_avg <- plot_mriqc_metric(T1, "fwhm_avg")
#cjv <- plot_mriqc_metric(T1, "cjv")
#efc <- plot_mriqc_metric(T1, "efc")
plt <- grid_arrange_shared_legend(snrd_total,cnr, snr_total)
ggsave(file="../out/t1_plots.tiff",plt, width =7, height=5) #might have to fix it in illustrator after or something...
plt
fd_mean <- plot_mriqc_metric(dti,"qc_mot_rel","Mean FD (mm)")
snr <- plot_mriqc_metric(dti, "avg_snr_0","SNR")
cnr <- plot_mriqc_metric(dti,"avg_cnr_1000","CNR")
#cnr <- plot_mriqc_metric(func, "cnr")
#gsr <- plot_mriqc_metric("gsr")
#efc <- plot_mriqc_metric(func, "efc")
#aor <- plot_mriqc_metric(func, "aor")
plt <- grid_arrange_shared_legend(cnr, snr, fd_mean)
ggsave(file="../out/dwi_plots.tiff",plt, width =7, height=5) #might have to fix it in illustrator after or something...
library(tidyverse)
library(tidyverse)
library(grid)
library(gridExtra)
plot_mriqc_metric <- function(mriqc,metric,title){
plot <- ggplot(data=mriqc, mapping = aes_string(x="subj", y=metric)) + geom_boxplot(outlier.shape=NA, width=0.75, colour="gray82") + geom_jitter(width=0.3, aes( fill=site, shape=site), size=3)+theme_classic(base_size=10)+theme(panel.background = element_rect(fill="white", colour="white"),axis.title.x=element_blank(),axis.title.y = element_text())+labs(y=title) +scale_shape_manual(values=shapez)+scale_fill_manual(values=fillz) +guides(fill=guide_legend("scanner"), shape=guide_legend("scanner"))
return(plot)
}
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(arrangeGrob(grobs=lapply(plots, function(x)
x + theme(legend.position="none",aspect.ratio=0.6))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight),
widths = unit(0.5, "npc")
)
}
func<- read.csv('/projects/gherman/SPINS_human_phantoms/group_bold.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16), parent_site=substr(bids_name,14,15)) %>% mutate(scanner_type= ifelse(substr(bids_name,16,16)=="P", "prisma","GE")) %>% filter(subj!="sub-05")
func_output <- func %>% select(bids_name, scanner=site, parent_site, scanner_type, subj, year,  tsnr, snr, fd_mean, fd_perc)
write.csv(func_output, ../out/func_summary.csv)
func_output <- func %>% select(bids_name, scanner=site, parent_site, scanner_type, subj, year,  tsnr, snr, fd_mean, fd_perc)
write.csv(func_output, "../out/func_summary.csv")
T1 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T1w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16))%>% filter(subj!="sub-05")
t1_output <- T1 %>% select(bids_name, scanner=site, parent_site, scanner_type, subj, year,  cnr, snr_csf,	snr_gm,	snr_total,	snr_wm,	snrd_csf,	snrd_gm,	snrd_total,	snrd_wm)
T1 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T1w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16) parent_site=substr(bids_name,14,15))%>% filter(subj!="sub-05")
T1 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T1w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16), parent_site=substr(bids_name,14,15))%>% filter(subj!="sub-05")
t1_output <- T1 %>% select(bids_name, scanner=site, parent_site, scanner_type, subj, year,  cnr, snr_csf,	snr_gm,	snr_total,	snr_wm,	snrd_csf,	snrd_gm,	snrd_total,	snrd_wm)
T1 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T1w.tsv', sep='\t') %>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16), parent_site=substr(bids_name,14,15))%>% mutate(scanner_type= ifelse(substr(bids_name,16,16)=="P", "prisma","GE")) %>% filter(subj!="sub-05")
t1_output <- T1 %>% select(bids_name, scanner=site, parent_site, scanner_type, subj, year,  cnr, snr_csf,	snr_gm,	snr_total,	snr_wm,	snrd_csf,	snrd_gm,	snrd_total,	snrd_wm)
write.csv(t1_output, "../out/T1w_summary.csv")
T2 <- read.csv('/projects/gherman/SPINS_human_phantoms/group_T2w.tsv', sep='\t')%>%
mutate(subj = substr(bids_name,1, 6), year = substr(bids_name, 8, 13), site=substr(bids_name, 14, 16), parent_site=substr(bids_name,14,15))%>% mutate(scanner_type= ifelse(substr(bids_name,16,16)=="P", "prisma","GE")) %>% filter(subj!="sub-05")
t2_output <- T2 %>% select(bids_name, scanner=site, parent_site, scanner_type, subj, year,  cnr, snr_csf,	snr_gm,	snr_total,	snr_wm,	snrd_csf,	snrd_gm,	snrd_total,	snrd_wm)
write.csv(t2_output, "../out/T2w_summary.csv")
